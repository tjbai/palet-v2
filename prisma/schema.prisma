generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model emails {
  id         String    @id @db.Uuid
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  email      String?   @unique
}

model users {
  clerk_id      String         @id @unique
  created_at    DateTime       @default(now())
  first_name    String?
  last_name     String?
  kandi_balance Int
  donations_v2  donations_v2[]
}

model playlists_tracks_v2 {
  track_id            BigInt              @default(autoincrement())
  playlist_id         BigInt
  track_index         Int                 @db.SmallInt
  static_playlists_v2 static_playlists_v2 @relation(fields: [playlist_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  static_tracks_v2    static_tracks_v2    @relation(fields: [track_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([track_id, playlist_id])
}

model static_playlists_v2 {
  id                  BigInt                @id @default(autoincrement())
  created_at          DateTime?             @default(now()) @db.Timestamptz(6)
  name                String                @unique
  cdn_image_url       String?
  origin_url          String?
  track_count         Int                   @db.SmallInt
  route_alias         String                @unique
  description         String?
  playlists_tracks_v2 playlists_tracks_v2[]
}

model static_tracks_v2 {
  id                  BigInt                @id @default(autoincrement())
  created_at          DateTime?             @default(now()) @db.Timestamptz(6)
  name                String                @unique
  cdn_path            String
  artists             String[]
  duration_ms         BigInt?
  kandi_count         BigInt?               @default(0)
  origin_url          String?
  playlists_tracks_v2 playlists_tracks_v2[]
  donations_v2        donations_v2[]
}

model donations_v2 {
  user_id          String
  track_id         BigInt
  amount           Int
  lastDonationDate DateTime         @default(now())
  track            static_tracks_v2 @relation(fields: [track_id], references: [id])
  users            users            @relation(fields: [user_id], references: [clerk_id], onDelete: Cascade, onUpdate: NoAction)

  @@id([user_id, track_id])
}
